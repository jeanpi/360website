I had a class last quarter that was based on creating your own game (board or video game). Each person was assigned a partner and from there you and your partner could decide what type of game you wanted to create. My partner and I decided to create a board game, much time and work was put into the project (mainly by myself) and it was completed by the time required. This was a challenge for me, mainly because my partner did literally less than 1/4 of the work required. A 30 minute presentation of the game was required too; I spoke for 25 minutes as my partner only spoke for 5. Even though I clearly have the best partner I was still able to present a game of great quality, receiving a grade of 100%. The game was later played by multiple students even after the quarter ended. But the progress along the way of creating the board game was very sloppy, and took a lot more work than what was actually necessary. The method I was using was code and fix. I did not find it to be effective (mainly because my partner and I did not get along) because when we tried to fix what what was wrong with the game, we could not agree on a similar way to fix the problem.

On a personnel as well as group basis I like to use waterfall. In the past, during my 162 class, we had to make a game on our own using everything we learned throughout the quarter. I first wrote down and analyzed all the topics/methods and different functions I have learned in class. By doing so, I saw that I would have to design a game that would rely on a lot of sorting and and reading from files. I designed a game of "hang man" that would select a random word from a text file that had over 30 words. As soon as the user started the game a timer would start, once the player finished (win or lose) the timer would end. The time was then recorded (only if they won) and the option "play again" would pop up. The sorting came in to place the highest scores which was based off of the fastest time. Using water fall for my "hang man" game worked very well and was easy to follow. I basically used the 5 points in water fall: analyze, design, construction, test and deploy; as due dates for myself and by doing that it gave me a good idea of how I should use my time. That is why I like to use water fall on a personal basis. I have had to work in a team before when it came to a group project and the same way I went about creating hang man on my own was the same way we went through the project as a group.There are not many methods that I tend to rebel, in fact the only method i rebel is code and fix. I am always willing to try new things, but in my opinion (due to past experiences) code and fix is method that is sloppy and can be too time consuming, especially when working in a group. Though this doesn't mean I wouldn't use that method again if, depending on the situation, but if I were working in a group and that was what our method choice was leaning upon, I would share my past experience in order to inform the group of the negative possibilities when using that method.

If I was on a paid software team I think that my experience with using certain methods more than others (water fall) I will be able to help explain as well as divide the amount of work each person has to do in an evenly manner. I think the biggest influence through my experience would completing big amounts of work in short periods of time. The board game project is the perfect example, even though I was using a method and working with a partner I was not comfortable with, I was still able to provide a well finished project within the time given.

 